buildscript {
	ext {
		kotlinVersion = '1.2.20'
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.jerre'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}

task(copyHerokuProperties, type: Copy, dependsOn: ['clean']) {
	from "config_sources"
	into "config"
	include "application_heroku.properties"
	rename("application_heroku.properties", "application.properties")
	doLast {
		println "#### heroku properties copied ####"
	}
}

task copyLocalMLabProperties(type: Copy) {
	from "config_sources"
	into "config"
	include "application_local_mlab.properties"
	rename("application_local_mlab.properties", "application.properties")
}

task copyLocalMongoProperties(type: Copy) {
	from "config_sources"
	into "config"
	include "application_local_mongo.properties"
	rename("application_local_mongo.properties", "application.properties")
}

task stage(type: Copy, dependsOn: [copyHerokuProperties, build]) {
	//Using an empty stage-task is enough to correctly build for heroku
}
stage.mustRunAfter(clean)

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}
